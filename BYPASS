--[[
    ANÔNIMO TX - MEMORY CLEANER PRO
    Recursos:
    - Limpeza de memória RAM em tempo real
    - Redução de overhead de CPU
    - Coleta de lixo forçada
    - Liberação de cache de texturas
    - Interface simplificada
--]]

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local Stats = game:GetService("Stats")
local TweenService = game:GetService("TweenService")
local LocalPlayer = Players.LocalPlayer

-- Configurações
local CLEANUP_INTERVAL = 0.1 -- Intervalo ultra-rápido (100ms)

-- Função principal de limpeza de memória
local function clearMemoryCache()
    -- 1. Forçar coleta de lixo (Lua VM)
    for i = 1, 5 do
        collectgarbage("collect")
    end
    
    -- 2. Liberar memória de texturas
    for _, instance in ipairs(workspace:GetDescendants()) do
        pcall(function()
            if instance:IsA("Texture") or instance:IsA("Decal") then
                instance:Release()
            end
        end)
    end
    
    -- 3. Reduzir overhead de instâncias
    game:GetService("ContentProvider"):PreloadAsync({}, function() end)
    
    -- 4. Limpar cache interno do Roblox
    settings().Rendering.RenderDFR = false
    settings().Rendering.QualityLevel = 1
end

-- Sistema de limpeza automática
local autoCleanEnabled = false
local autoCleanThread = nil

local function startAutoClean()
    if autoCleanThread then return end
    
    autoCleanEnabled = true
    autoCleanThread = task.spawn(function()
        local lastUpdate = time()
        while autoCleanEnabled do
            clearMemoryCache()
            
            -- Atualizar status a cada 1 segundo
            if time() - lastUpdate > 1 then
                lastUpdate = time()
                statusLabel.Text = "Status: Limpando... Mem: " .. math.floor(Stats:GetTotalMemoryUsageMb()) .. "MB"
            end
            
            task.wait(CLEANUP_INTERVAL)
        end
        autoCleanThread = nil
    end)
end

-- Configuração da GUI
local screenGui = Instance.new("ScreenGui", LocalPlayer:WaitForChild("PlayerGui"))
screenGui.Name = "MemoryCleanerProGui"
screenGui.ResetOnSpawn = false

-- Botão de Alternar
local toggleButton = Instance.new("TextButton", screenGui)
toggleButton.Size = UDim2.new(0, 180, 0, 35)
toggleButton.Position = UDim2.new(0, 20, 0, 20)
toggleButton.Text = "Mostrar Memory Cleaner"
toggleButton.BackgroundColor3 = Color3.fromRGB(50, 50, 70)
toggleButton.TextColor3 = Color3.new(1, 1, 1)
toggleButton.Font = Enum.Font.GothamBold
toggleButton.TextSize = 14
local toggleCorner = Instance.new("UICorner", toggleButton)
toggleCorner.CornerRadius = UDim.new(0, 8)

-- Função de Notificação
local function notify(message, success)
    local notif = Instance.new("TextLabel", screenGui)
    notif.Text = message
    notif.Size = UDim2.new(0, 300, 0, 40)
    notif.Position = UDim2.new(0.5, -150, 0.1, 0)
    notif.BackgroundColor3 = success and Color3.fromRGB(30, 150, 50) or Color3.fromRGB(180, 50, 50)
    notif.BackgroundTransparency = 0.2
    notif.TextColor3 = Color3.new(1, 1, 1)
    notif.Font = Enum.Font.GothamBold
    notif.TextSize = 18
    notif.AnchorPoint = Vector2.new(0.5, 0)
    local notifCorner = Instance.new("UICorner", notif)
    notifCorner.CornerRadius = UDim.new(0, 6)

    TweenService:Create(notif, TweenInfo.new(0.3), {TextTransparency = 0, BackgroundTransparency = 0.2}):Play()
    task.delay(2, function()
        TweenService:Create(notif, TweenInfo.new(0.3), {TextTransparency = 1, BackgroundTransparency = 1}):Play()
        task.wait(0.3)
        notif:Destroy()
    end)
end

-- Display de FPS e Memória
local fpsLabel = Instance.new("TextLabel", screenGui)
fpsLabel.Size = UDim2.new(0, 200, 0, 30)
fpsLabel.Position = UDim2.new(0, 210, 0, 20)
fpsLabel.BackgroundColor3 = Color3.fromRGB(20, 20, 30)
fpsLabel.BackgroundTransparency = 0.3
fpsLabel.TextColor3 = Color3.new(1, 1, 1)
fpsLabel.Font = Enum.Font.GothamBold
fpsLabel.TextSize = 14
fpsLabel.Text = "FPS: 0 | Mem: 0MB"
local fpsCorner = Instance.new("UICorner", fpsLabel)
fpsCorner.CornerRadius = UDim.new(0, 6)

-- Label de Status
local statusLabel = Instance.new("TextLabel", screenGui)
statusLabel.Size = UDim2.new(0, 300, 0, 25)
statusLabel.Position = UDim2.new(0, 20, 0, 60)
statusLabel.BackgroundTransparency = 1
statusLabel.TextColor3 = Color3.fromRGB(100, 255, 100)
statusLabel.Font = Enum.Font.GothamBold
statusLabel.TextSize = 16
statusLabel.Text = "Status: Aguardando..."

-- Frame Principal
local frame = Instance.new("Frame", screenGui)
frame.Size = UDim2.new(0, 280, 0, 150)
frame.Position = UDim2.new(0, 20, 0, 100)
frame.BackgroundColor3 = Color3.fromRGB(30, 30, 40)
frame.BackgroundTransparency = 0.05
frame.Visible = false
frame.Active = true
frame.Draggable = true
local UICorner = Instance.new("UICorner", frame)
UICorner.CornerRadius = UDim.new(0, 10)

-- Alternar GUI
local uiVisible = false
toggleButton.MouseButton1Click:Connect(function()
    uiVisible = not uiVisible
    frame.Visible = uiVisible
    toggleButton.Text = uiVisible and "Esconder Memory Cleaner" or "Mostrar Memory Cleaner"
end)

-- Título
local title = Instance.new("TextLabel", frame)
title.Text = "MEMORY CLEANER PRO"
title.Size = UDim2.new(1, 0, 0, 40)
title.BackgroundTransparency = 1
title.TextColor3 = Color3.fromRGB(200, 200, 255)
title.Font = Enum.Font.GothamBold
title.TextSize = 20

-- Botão de Limpeza Rápida
local cleanBtn = Instance.new("TextButton", frame)
cleanBtn.Size = UDim2.new(1, -30, 0, 40)
cleanBtn.Position = UDim2.new(0, 15, 0, 50)
cleanBtn.Text = "LIMPAR MEMÓRIA AGORA"
cleanBtn.BackgroundColor3 = Color3.fromRGB(70, 100, 150)
cleanBtn.TextColor3 = Color3.new(1, 1, 1)
cleanBtn.Font = Enum.Font.GothamBold
cleanBtn.TextSize = 16
local cleanCorner = Instance.new("UICorner", cleanBtn)
cleanCorner.CornerRadius = UDim.new(0, 6)

cleanBtn.MouseButton1Click:Connect(function()
    clearMemoryCache()
    statusLabel.Text = "Status: Memória limpa!"
    notify("Memória RAM liberada!", true)
end)

-- Botão de Limpeza Automática
local autoBtn = Instance.new("TextButton", frame)
autoBtn.Size = UDim2.new(1, -30, 0, 40)
autoBtn.Position = UDim2.new(0, 15, 0, 100)
autoBtn.Text = "ATIVAR AUTO-LIMPEZA"
autoBtn.BackgroundColor3 = Color3.fromRGB(150, 70, 70)
autoBtn.TextColor3 = Color3.new(1, 1, 1)
autoBtn.Font = Enum.Font.GothamBold
autoBtn.TextSize = 16
local autoCorner = Instance.new("UICorner", autoBtn)
autoCorner.CornerRadius = UDim.new(0, 6)

autoBtn.MouseButton1Click:Connect(function()
    autoCleanEnabled = not autoCleanEnabled
    
    if autoCleanEnabled then
        startAutoClean()
        statusLabel.Text = "Status: Auto-limpeza ATIVA"
        autoBtn.BackgroundColor3 = Color3.fromRGB(70, 150, 70)
        autoBtn.Text = "DESATIVAR AUTO-LIMPEZA"
        notify("Auto-limpeza ATIVADA!", true)
    else
        statusLabel.Text = "Status: Auto-limpeza DESATIVADA"
        autoBtn.BackgroundColor3 = Color3.fromRGB(150, 70, 70)
        autoBtn.Text = "ATIVAR AUTO-LIMPEZA"
        notify("Auto-limpeza DESATIVADA!", false)
    end
end)

-- Monitor de FPS
local fps, frames = 0, 0
RunService.RenderStepped:Connect(function(dt)
    frames += 1
    fps += dt
    if fps >= 1 then
        local mb = math.floor(Stats:GetTotalMemoryUsageMb())
        fpsLabel.Text = "FPS: " .. tostring(math.floor(frames / fps)) .. " | Mem: " .. mb .. "MB"
        fps, frames = 0, 0
    end
end)

-- CRÉDITOS
local credits = Instance.new("TextLabel", frame)
credits.Size = UDim2.new(1, -20, 0, 20)
credits.Position = UDim2.new(0, 10, 1, -25)
credits.Text = "ANÔNIMO TX - MEMORY CLEANER"
credits.TextColor3 = Color3.fromRGB(255, 255, 0)
credits.BackgroundTransparency = 1
credits.Font = Enum.Font.GothamBold
credits.TextSize = 12

-- Inicialização
notify("Memory Cleaner Pro carregado!", true)
